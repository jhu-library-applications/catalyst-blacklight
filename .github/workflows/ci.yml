# Working Catalyst BL7 GitHub Action
#
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: CI

on: push

env:
  # these are all referenced in our app's database.yml for test
  # FindIt needs to be the actual prod url because it is loaded
  # on pages when the capybara tests are loaded.
  MYSQL_SERVER: localhost
  MYSQL_DATABASE: jhu_bl_test
  MYSQL_USER: root
  MYSQL_PASSWORD: root
  SOLR_URL: http://127.0.0.1:8983/solr/blacklight-core
  CATALYST_UMLAUT_BASE_URL: https://findit.library.jhu.edu
  AEON_URL: https://aeon.library.jhu.edu
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  GOOGLE_BOOKS_API_KEY: ${{ secrets.GOOGLE_BOOKS_API_KEY }}
  HORIZON_WS_URL: http://localhost:8080/ws  
  ILLIAD_URL: https://ill.library.jhu.edu/msel/illiad.dll
  RELAIS_API_URL: borrow-direct.relais-host.com
  RELAIS_API_KEY: ${{ secrets.RELAIS_API_KEY }}
  RELAIS_PARTNERSHIP_ID: BD
  RELAIS_LIBRARY_SYMBOL: JOHNSHOPKINS
  RELAIS_PATRON_ID: ${{ secrets.RELAIS_PATRON_ID }}
jobs:
  tests:
    services:
      solr:
        image: ghcr.io/jhu-library-applications/catalyst-docker-solr:latest
        ports:
          - 8983:8983
      db:
        image: mysql:5.7
        env:
            MYSQL_DATABASE: jhu_bl_test
            MYSQL_USER: root
            MYSQL_PASSWORD: root
        ports:
          - 3306

    runs-on: ubuntu-latest

    steps:
        - name: Installed shared-mime-info
          run: sudo apt-get install shared-mime-info

        - name: Checkout code repo
          uses: actions/checkout@v2

        - name: Ruby - Set up
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: '2.6.6'
            bundler-cache: true

        - name: Node - Install node for Rails JS runtime
          uses: actions/setup-node@v2
          with:
            node-version: '12'

        - name: MySQL - Run
          run: |
            sudo /etc/init.d/mysql start

        - name: MySQL - Create jhu_bl_test database
          run: |
            mysql -uroot -h127.0.0.1 -proot -e 'CREATE DATABASE IF NOT EXISTS jhu_bl_test;'

        - name: Apt - Install dependencies
          run: |
            sudo apt-get update
            sudo apt-get -y install libvips-tools ffmpeg mediainfo poppler-utils

        - name: Rails - Yarn install
          env:
            RAILS_ENV: test
          run: |
            yarn install

        - name: Rails assets
          env:
            RAILS_ENV: test
          run: |
            bundle exec rails assets:precompile

        - name: Rails - Database setup
          env:
            RAILS_ENV: test
          run: |
            bundle exec rails db:create
            bundle exec rails db:migrate

        - name: Tests - Run tests
          env:
            RAILS_ENV: test
            RUBYOPT: W0
          run: |
            bundle exec rake ci
        
        - name: Upload Screenshots
          if: failure()
          uses: actions/upload-artifact@v2
          with:
            name: screenshots
            path: tmp/screenshots

        - name: Upload SimpleCov coverage files
          uses: actions/upload-artifact@v2
          with: 
            name: coverage
            path: coverage
            
        - name: Codecov
          uses: codecov/codecov-action@v2.0.1
          with:
            files: ./coverage/coverage.xml
